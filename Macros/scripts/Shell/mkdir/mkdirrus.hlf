.Language=Russian,Russian (Русский)
.PluginContents=Создание нескольких директорий

@Contents
$ #Создание нескольких директорий#
    #Назначение#
    ──────────
    Эта команда позволяет создать одним вызовом сразу несколько директорий.
При этом имена директорий в списке должны разделяться символом ';'.
Допустимо также использование более сложных шаблонов, описанных ниже.


    #Шаблоны#
    ───────
    Шаблон для генерации имен директорий может содержать следующие элементы:
~неизменяемая часть~@Fixed@, ~перечисление~@List@, ~диапазон~@Range@.
По шаблону могут создаваться также цепочки из нескольких вложенных
поддиректорий.

    #Примечание:# при необходимости можно отменить специальное действие
служебных символов шаблонов, заключив имя директории в двойные кавычки.


 #Примеры шаблонов с перечислениями и диапазонами:#
 ────────────────────────────────────────────────
    Disk{1-100}
    Disk{001-100}
    USER{{1-5};9;12;{15-20}}.DATA
    hex{1-1FF}
    {00-ff}
    {a-z}
    {A-Z};{a-z}
    {Beta;Release}\Disk{1-20}

 #См.также:#
 ─────────
    ~Неизменяемая часть~@Fixed@
    ~Перечисление~@List@
    ~Диапазон~@Range@
    ~Псевдонимы~@Aliases@


    #Установка#
    ─────────
    Скопируйте все файлы поставки в папку #%FARPROFILE%\Macros\scripts\MkDir#
(Far3) или #~~/.config/far2m/Macros/scripts/MkDir# (Far2m) и перезапустите Far.
Нажмите комбинацию клавиш, на которую был назначен макрос.


@Fixed
$ #Неизменяемая часть#
    Любой текст, расположенный вне фигурных скобок, считается неизменяемой
частью и переносится в генерируемое имя директории без изменений.
Если неизменяемая часть содержит хотя бы один из символов #{#, #}#, #;#,
то она должна быть помещена в двойные кавычки, например "abc{}def;123".

@List
$ #Перечисление#
    В шаблонах можно использовать одно или несколько перечислений - перечней
фрагментов имени, разделяемых точкой с запятой и заключенных в фигурные
скобки. При генерации имен директорий производится последовательная
подстановка всех указанных фрагментов. В случае использования нескольких
перечислений происходит перемножение задаваемых ими множеств значений.


 #Примеры перечислений:#
 ─────────────────────
    {1;2;3}
    {Beta;Release}

 #Примеры шаблонов, содержащих и неизменяемую часть, и перечисление:#
 ──────────────────────────────────────────────────────────────────
    DISK{1;2;3}.DSK
         - создает директории DISK1.DSK, DISK2.DSK и DISK3.DSK.
    {Beta;Release}\{Disk1;Disk2;Disk3}
         - создает директории Beta и Release, в каждой из которых
           создает поддиректории Disk1, Disk2 и Disk3.
@Range
$ #Диапазон#
    В шаблонах внутри перечислений можно задавать диапазоны значений,
указав граничные значения, разделенные знаком '-'. Диапазон должен
быть заключён в фигурные скобки, например {12-35}.

    Распознаются диапазоны трех типов:
 - #десятичные числа# (если использованы только цифры от 0 до 9);
 - #шестнадцатеричные числа# (цифры от 0 до 9 и буквы от A до F);
 - #символьные# (в качестве граничного значения - один любой символ).

    Для числовых диапазонов по первому полю диапазона запоминается минимальная
ширина генерируемого числового поля, и при необходимости генерируемое число
дополняется ведущими нулями. Таким образом, можно использовать конструкции
вида {001-1000} для генерации имен директорий "001", "002" ... "999", "1000".

    Для шестнадцатеричных диапазонов регистр использованных букв (a-f или A-F)
определяет и регистр шестнадцатеричных цифр генерируемых имен.


 #Примеры перечислений с диапазонами:#
 ───────────────────────────────────
    {1-5}
    {1-10}
    {01-10}
    {1-5};9;12;{15-20}
    {1-1FF}
    {00-ff}
    {a-z}
    {A-Z};{a-z}
    {Beta;Release}\Disk{1-20}


    #Примечание:# будьте внимательны при задании шаблонов с множественными
перечислениями и диапазонами, так как ошибка может привести к генерации
огромного количества директорий.

@Aliases
$ #Псевдонимы#
 #Общая информация#
 ────────────────
 #*# Псевдонимы читаются из файла #mkdir.alias#, если таковой существует.
 #*# Строки, начинающиеся с ##, игнорируются
 #*# Формат строк: имя псевдонима, за которым следуют пробелы, за которыми следует значение псевдонима
 #*# Имена псевдонимов не могут содержать пробелов
 #*# Имена псевдонимов нечувствительны к регистру (foo и FOO — это один и тот же псевдоним)
 #*# В диалоговом окне ввода псевдонимы должны быть заключены в угловые скобки, например #<journey>#

 
 #Lua-псевдонимы#
 ──────────────
 Если имя псевдонима имеет префикс #lua:#, то псевдоним — это код Lua, который будет исполнен.
Это может быть либо Lua-expression, либо блок кода, явно возвращающий значение.
 - Возвращённая строка используется без преобразований.
 - Возвращённая таблица преобразуется в ~перечисление~@List@.
 - Префикс #lua:# должен быть опущен в диалоговом окне ввода, например, имя псевдонима #lua:date#
соответствует #<date># в диалоговом окне.


 #Примеры:#
 ────────
 journey   {Documents;Photo;Video;Music}
 months    {January;February;March;April;May;June;July;August;September;October;November;December}
 lua:date  os.date("%Y-%m-%d")
 lua:test  t={}; for k=10,100,7 do table.insert(t,k) end; return t


 ~Содержание~@Contents@
