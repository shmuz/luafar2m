.Language=Russian,Russian (Русский)
.PluginContents=Polygon
.Options CtrlColorChar=\

@Contents
$^ #Polygon - Содержание справки#
 #Polygon# - Плагин для Far Manager, предназначен для просмотра
           и редактирования баз данных SQLite.

 Плагин сделан на основе плагина SQLiteDB Артёма Сеничева.

 Для плагина требуется внешняя sqlite3.dll (версия >= 3.22)
 соответствующей битности, находящаяся в папке плагина или
 в папке Far Manager или на PATH.


 ~Справка по действиям ключей в панели плагина~@Keyboard@
 ~Режим нескольких баз данных~@MultiDbMode@
 ~Диалог настройки вида панели~@PanelView@
 ~Фильтр панели~@PanelFilter@
 ~Вызов плагина~@Invoke@
 ~Диалог конфигурации~@ConfigDialog@
 ~Редактирование записей таблицы~@EditInsertRow@
 ~Диалог экспорта данных~@Export@
 ~Диалог дампа данных~@Dump@
 ~Диалог починки данных~@Recover@
 ~Меню истории запросов~@queries_history@
 ~Диалог создания таблицы~@CreateTableDialog@
 ~Пользовательские модули~@UserModules@
 ~Разное~@Misc@

@MultiDbMode
$^ #Режим нескольких баз данных#
 У плагина есть два основных режима при хождении по базе данных и установке "папок":
"упрощённый" режим и режим нескольких баз данных.

 В упрощённом режиме плагин видит только базу данных #main# и игнорирует другие базы
данных, которые могут быть подсоединены.

 В режиме нескольких баз данных плагин позволяет перемещаться между всеми подключенными базами.

 Нажатие #Ctrl+BackSlash# или нажатие #Enter# на папке #..# может обрабатываться по-разному
в зависимости от текущего режима плагина.

 При вызове плагина режим определяется соответствующей опцией в ~конфигурации~@ConfigDialog@.
Также возможно переключаться между режимами при помощи горячей ~клавиши~@Keyboard@.


 ~Содержание~@Contents@

@Invoke
$^ #Вызов плагина#
 Вызов плагина можно осуществить следующими способами:

   1. Из меню плагинов. Плагин откроет файл под курсором.

   2. Нажатием Enter на файле в панелях.

   3. Из командной строки: #polygon: [<options>] <filename>#
      - Опции могут быть следующими:
          #-u# - загружать общие модули пользователя
          #-i# - загружать индивидуальные модули пользователя
          #-e# - разрешить расширения
          #-F# - не учитывать внешние ключи
        Опции можно передавать вместе, например #-ue# или отдельно, например #-u -e#.
      - Если файл <filename> не существует, он будет создан.
      - Если имя файла не указано, то база данных будет создана в памяти.

   4. Из ~ссылок на папки~@:FolderShortcuts@.

   5. Из ~макроса~@CallFromMacro@.


 ~Содержание~@Contents@

@Keyboard
$^ #Справка по действиям ключей в панели плагина#
   #Режим показа#     │ #Ключ#                │ #Действие#
   ─────────────────┼─────────────────────┼───────────────────────────────────────────────────
   Любой            │ F6                  │ История запросов SQL
                    │ Alt-Shift-F6        │ Включение/выключение режима нескольких баз данных
                    │ LCtrl-1             │ Двухпанельный режим просмотра
                    │ LCtrl-2             │ Однопанельный режим просмотра
                    │ Ctrl-Shift-BackSlash│ Закрыть панель плагина
   ─────────────────┼─────────────────────┼───────────────────────────────────────────────────
   База данных      │ F3                  │ Просмотр содержимого элемента под курсором
                    │ F4                  │ Просмотр запроса на создание элемента под курсором
                    │ Shift-F4            │ Просмотр прагм SQLite для базы данных
                    │ F5                  │ Диалог экспорта данных для элемента под курсором
                    │ Shift-F5            │ Диалог создания дампа данных
                    │ Shift-F6            │ Диалог восстановления данных
                    │ F7                  │ Диалог создания новой таблицы
                    │ F8                  │ Диалог удаления выделенных элементов базы данных
   ─────────────────┼─────────────────────┼───────────────────────────────────────────────────
   Таблица или View │ Shift-F3            │ Диалог настройки вида панели
                    │ Alt-F3              │ Переключение вида панели: полный/настроенный
                    │ Shift-F6            │ Диалог фильтра панели
                    │ Alt-F6              │ Включение/выключение фильтра панели
                    │ Ctrl-N              │ Меню выбора режима сравнения при сортировке
   ─────────────────┼─────────────────────┼───────────────────────────────────────────────────
   Таблица          │ F4, Enter           │ Редактирование записи под курсором
                    │ Shift-F4            │ Вставка новой записи
                    │ Shift-F5            │ Вставка копии записи под курсором
                    │ Alt-F5              │ Показывать/не показывать сродство колонок
                    │                     │   (i=integer, t=text, b=blob, r=real, n=numeric)
                    │ F8                  │ Диалог удаления выделенных записей
   ─────────────────┴─────────────────────┴───────────────────────────────────────────────────

^#Исполнение командной строки в панели плагина#

     #lua <text>#       <text> исполняется как Lua-код.
                      Коду передаётся 2 аргумента, как в ~Plugin.Call(<guid>, "lua")~@CallFromMacro@.

     #cd <text>#        Команда обрабатывается Far Manager'ом.
                      Это позволяет перемещаться между эмулируемыми папками плагина.

     #<word>:<text>#    Команда обрабатывается Far Manager'ом.
                      Это позволяет вызывать команды других плагинов.

     #<Прочие случаи>#  Команда исполняется как SQL-запрос.


 ~Содержание~@Contents@

@PanelView
$^ #Диалог настройки вида панели#
   Данный диалог позволяет выбрать колонки для отображения и настроить их ширину.
Ширина колонок задаётся как в диалоге настройки ~режимов панели~@:PanelViewModes@
Far Manager'а (это может быть 0, либо количество знакомест, либо процент от общей
ширины панели).

   Если диалог был закрыт кнопкой OK, то панель перестроится в соответствии
с установками диалога. Эти установки будут также сохранены на постоянной основе
в локальной базе данных плагина.

   Нажатие Alt-F3 в панели плагина переключает режим просмотра между "полным"
и "настроенным".


 ~Содержание~@Contents@

@PanelFilter
$^ #Фильтр панели
 Фильтр панели позволяет отображать только те записи, которые соответствуют
заданному запросу SQL.

 #Пример:#

   ╔══════════════════ Фильтр панели ═══════════════════╗
   ║ #SELECT * FROM 'Personnel'#                          ║
   ║ <опциональный текст>                              ↓║
   ║ #WHERE#                                              ║
   ║ salary between 2000 and 3000                      ↓║
   ╟────────────────────────────────────────────────────╢
   ║                { OK } [ Отменить ]                 ║
   ╚════════════════════════════════════════════════════╝


 ~Содержание~@Contents@

@ConfigDialog
$^ #Диалог конфигурации
 Следующие установки относятся к общей конфигурации плагина.

 #[ ] Добавить в меню плагинов#        Добавить пункт в меню плагинов
 #[ ] Подтверждать закрытие панели#    Подтверждать закрытие панели
 #[ ] Режим нескольких баз данных#     Показывать все подключенные базы данных
 #Префикс:#                            Префикс командной строки плагина
 #Маски исключения:#                   Не пытаться открыть файл, соответствующий
                                     данным маскам, при нажатии Enter или CtrlPgDn

 Следующие установки применяются при создании нового подключения к базе данных.
Изменения этих установок не влияют на уже открытые панели плагина.

 #[ ] Загружать общие модули пользователя#           Модули из %farprofile%\PluginsData\Polygon
 #[ ] Загружать индивидуальные модули пользователя#  Модули, указанные в самой базе данных
 #[ ] Разрешить расширения#                          Исполнять #sqlite3_enable_load_extension(db,1)#
 #[ ] Не учитывать внешние ключи#                    Не исполнять #PRAGMA foreign_keys = ON#


 ~Содержание~@Contents@

@UserModules
$^ #Пользовательские модули
 Пользовательский модуль - это набор Lua-функций, помещённых в таблицу.
 Модули загружаются из файлов с расширением #.lua#, местоположение которых
описано ниже в пунктах (1) и (2).
 При исполнении файла ему передаётся его полное имя в качестве первого параметра.

 #1.# Модули загружаются из файлов, находящихся в папке
#%FARPROFILE%\PluginsData\Polygon# и её подпапках.

    Этот механизм действует на любой открываемый плагином файл баз данных,
    поэтому в данных модулях лучше помещать какие-то общеполезные действия.

 #2.# Если файл базы данных содержит таблицу с именем #modules-D4BC5EA7-8229-4FFE-AAC1-5A4F51A0986A#,
    то модули, указанные в данной таблице, также будут загружаться.
    - Колонка #script# должна содержать имя файла (либо абсолютное, либо относительно папки файла базы данных).
    - Колонка #enabled# должна быть равной 1, чтобы скрипт загружался.
    - Числовая колонка #load_priority# определяет порядок загрузки скриптов (чем больше, тем раньше).

    Этот механизм действует индивидуально на данный файл базы данных, поэтому
    в данных модулях могут быть действия, специфические для данной базы.

 #3.# Модули загружаются сразу после установки успешного соединения плагина
с базой данных.

 #4.# Модуль может содержать все или некоторые из следующих полей-функций,
вызываемых плагином в различных ситуациях:
~OnOpenConnection~@OnOpenConnection@, ~ProcessPanelEvent~@ProcessPanelEvent@,
~ProcessPanelInput~@ProcessPanelInput@ и ~ClosePanel~@ClosePanel@.

 #5.# Модуль может содержать поле #Priority# (число от 0 до 100).
Если поле не указано, применяется значение по умолчанию 50.
Функции модулей с большим приоритетом вызываются раньше.

 #6.# Для загрузки модулей нужно использовать функцию #UserModule#.

 #7.# Пример структуры кода пользовательского модуля:

    #local mod = { Priority=60 }#
    #mod.OnOpenConnection  = function() ... end#
    #mod.ProcessPanelEvent = function() ... end#
    #mod.ProcessPanelInput = function() ... end#
    #mod.ClosePanel        = function() ... end#
    #UserModule(mod)#


 ~Содержание~@Contents@

@OnOpenConnection
$^ #OnOpenConnection
 #OnOpenConnection(info)#

 #Параметры:#
   info:   таблица ~tInfo~@tInfo@

 #Возвращает:#
   ничего

 #Описание:#
   Данная функция вызывается сразу после установления соединения с базой данных.


 ~Пользовательские модули~@UserModules@
 ~Содержание~@Contents@

@ProcessPanelEvent
$^ #ProcessPanelEvent
 #result = ProcessPanelEvent(info, handle, event, param)#

 #Параметры:#
   info   :  таблица ~tInfo~@tInfo@
   handle :  описатель панели
   event  :  integer
   param  :  string (для FE_CHANGEVIEWMODE и FE_COMMAND), или nil

 #Возвращает:#
   result :  boolean

 #Описание:#
   За исключением 1-го параметра функция аналогична функции export.ProcessPanelEvent
(см. мануал LuaFAR).


 ~Пользовательские модули~@UserModules@
 ~Содержание~@Contents@

@ProcessPanelInput
$^ #ProcessPanelInput
 #result = ProcessPanelInput (info, handle, rec)#

 #Параметры:#
   info   : таблица ~tInfo~@tInfo@
   handle : описатель панели
   rec    : таблица tInputRecord

 #Возвращает:#
   result :  boolean

 #Описание:#
   За исключением 1-го параметра функция аналогична функции export.ProcessPanelInput
(см. мануал LuaFAR).


 ~Пользовательские модули~@UserModules@
 ~Содержание~@Contents@

@ClosePanel
$^ #ClosePanel
 #ClosePanel(info, handle)#

 #Параметры:#
   info   : таблица ~tInfo~@tInfo@
   handle : описатель панели

 #Возвращает:#
   ничего

 #Описание:#
   За исключением 1-го параметра функция аналогична функции export.ClosePanel
(см. мануал LuaFAR).
 Данная функция не должна закрывать соединение с базой данных - это делает плагин.


 ~Пользовательские модули~@UserModules@
 ~Содержание~@Contents@

@tInfo
$^ #Таблица tInfo#
 Данная таблица имеет следующие поля:

    #db         # : userdata : соединение с базой данных (см. мануал ~LuaSQLite3~@http://lua.sqlite.org/index.cgi/doc/tip/doc/lsqlite3.wiki@)
    #file_name  # : string   : имя файла базы данных
    #multi_db   # : boolean  : режим нескольких баз данных
    #schema     # : string   : текущая схема, например: "main", "temp" и т.д.
    #panel_mode # : string   : "root", "db", "table", "view", "query"
    #curr_object# : string   : имя текущего отображаемого объекта (родительской папки)
    #rowid_name # : string   : имя, которое можно использовать в SQL-запросах как ROWID
    #get_rowid  # : function : вызывается с одним параметром типа #tPanelItem#
                             (см. мануал LuaFAR); возвращает целое число


 ~Пользовательские модули~@UserModules@
 ~Содержание~@Contents@

@EditInsertRow
$^ #Редактирование записей таблицы#
 Данный диалог позволяет редактировать существующую или добавляемую запись таблицы.
 Возможно добавление сразу нескольких записей, см. поле #Количество#.

 Каждое поле редактирования отображает содержимое как текст, число, BLOB или NULL.
   - Текстовые значения отображаются наподобие   #some text#
   - Числовые значения отображаются наподобие    #15#, #0.35# или #2.35e6#
   - Значения типа BLOB отображаются наподобие   #x'13E6BC64'#
   - Значения типа NULL отображаются как         #NULL#

   Если при нажатии кнопки #Сохранить# плагин детектирует поле, не соответствующее
   вышеуказанным форматам, то это поле рассматривается как текстовое
   и нормализуется плагином.

 Можно использовать следующие ключи:
   #Ctrl-N#  переключение между NULL и исходным значением
   #Ctrl-O#  переключение между простым и нормализованным представлением
   #F3#      просмотр во встроенном вьювере
   #F4#      редактирование во встроенном редакторе
   #Alt-F3#  преобразовать блоб в текст и показать в окне сообщения


 ~Содержание~@Contents@

@CallFromMacro
$^ #Вызов из макроса#
 #Plugin.Call(<guid>, "open", <filename> [,<flags>])#

   Открывает SQLite3 файл <filename> в активной панели.
     <filename>: имя файла с полным путём.
     <flags>: строка, комбинация из 0 или более опций:
              #"u"# - загружать общие модули пользователя
              #"i"# - загружать индивидуальные модули пользователя
              #"e"# - разрешить расширения
              #"F"# - не учитывать внешние ключи
        Если параметр <flags> не строкового типа или опущен,
        то применяются текущие установки конфигурации плагина.

 #Plugin.Call(<guid>, "lua", <whatpanel>, <Lua code>)#

   Исполняет заданную строку кода Lua.
     <whatpanel> : 0 = активная панель, 1 = пассивная панель.
                   Можно указать nil для кода, не связанного с панелями.
        Если <whatpanel> указывает на открытую панель данного плагина,
        то <Lua code> будет вызван с двумя аргументами:
            info    : таблица ~tInfo~@tInfo@
            handle  : описатель панели
     <Lua code>  : Lua-код в текстовом представлении

 #Plugin.Call(<guid>, "sql", <whatpanel>, <SQL code>)#

   Исполняет заданные запросы SQL.
     <whatpanel> : 0 = активная панель, 1 = пассивная панель.
     <SQL code>  : один или больше запросов SQL.


 ~Содержание~@Contents@

@Export
$^ #Диалог экспорта данных#
  #Экспорт <имя таблицы> в:#
    Укажите имя файла для экспорта данных в него.

  #Формат файла:#
    #(•) CSV#
        экспортировать в формате значений, разделённых запятыми
        #[x] Сохранять переводы строк#
            Отмечено:     сохранять переводы строк
            Не отмечено:  заменять переводы строк пробелами
    #(•) Текст#
        экспортировать в простом текстовом формате


 ~Содержание~@Contents@

@Dump
$^ #Диалог дампа данных#
  #ВАЖНОЕ ЗАМЕЧАНИЕ:#
  Для создания дампов плагину требуется #sqlite3.exe#.
  sqlite3.exe должен находиться либо на PATH, либо в папке плагина.


  #[x] Полный дамп#
  Отмечено:      сделать дамп всей базы данных.
  Не отмечено:   сделать дамп только выделенных элементов.

  #[x] Сохранять rowid#
  Отмечено:      сохранять rowid'ы.

  #[x] Сохранять переводы строк#
  Отмечено:      переводы строк сохраняются, и одна запись может занимать несколько строк.
  Не отмечено:   текст кодируется таким образом, что каждая запись занимает одну строку.


 ~Содержание~@Contents@

@Recover
$^ #Диалог починки данных#
  #ВАЖНОЕ ЗАМЕЧАНИЕ:#
  Для создания дампов плагину требуется #sqlite3.exe#.
  sqlite3.exe должен находиться либо на PATH, либо в папке плагина.

  Имеются 2 опции:
    #(•) Восстановить в виде дампа#
    #( ) Восстановить в виде базы данных#

 ~Содержание~@Contents@

@queries_history
$^ Меню истории запросов
 Это меню выводит историю запросов SQL.

 #Enter#                         Выполнить запрос
 #Ctrl+Enter#                    Вставить запрос в командную строку
 #F4#                            Редактировать и выполнить, если изменено
 #F6#                            Открыть пустой редактор
 #Shift+Del#                     Удалить запрос из истории
 #Ctrl+C, Ctrl+Ins#              Скопировать запрос в буфер обмена
 #Ctrl+Shift+C, Ctrl+Shift+Ins#  Скопировать сериализацию всех запросов


 ~Содержание~@Contents@

@Misc
$^ #Разное#
 1. Метод сравнения (collation) с именем #utf8_ncase# (регистро-независимое сравнение в UTF-8)
автоматически добавляется к любому подключению базы данных. Этот метод можно использовать в схемах
и командах SQL.

 2. Функции ядра SQLite #lower#, #upper# и #like# заменены их эквивалентами, поддерживающими UTF-8.

 3. Добавлена пользовательская функция #regexp#, что делает возможным использование оператора #REGEXP#
в выражениях SQL.


 ~Содержание~@Contents@

@CreateTableDialog
$^ #Диалог создания таблицы#

 Этот диалог помогает создать новую таблицу.

 - Введите имя таблицы и определения её колонок в соответствующие поля.

 - Если после определений колонок нужны дополнительные условия (CHECK, UNIQUE и т.д.),
   они могут быть введены в следующие свободные поля определения колонок.

 - Пустые поля колонок игнорируются. Хотя бы одно из этих полей должно быть непустым.

 - Плагин использует введенные имена без обработки. Если синтаксис требует заключить имя
   в кавычки, это должно быть сделано пользователем.


 ~Содержание~@Contents@
